rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow admins to read and write all documents
    match /{document=**} {
      allow read, write: if hasAnyRole(["ADMIN", "OWNER"]);
    }

    // Rowy: Allow signed in users to read Rowy configuration and admins to write
    match /_rowy_/{docId} {
      allow read: if request.auth.token.roles.size() > 0;
      allow write: if hasAnyRole(["ADMIN", "OWNER"]);
    	match /{document=**} {
        allow read: if request.auth.token.roles.size() > 0;
        allow write: if hasAnyRole(["ADMIN", "OWNER"]);
      }
      match /schema/{tableId} {
        allow update: if canModify(tableId,'pc')
        match /{document=**} {allow read,write: if canModify(tableId,'pc')}
      }
       match /groupSchema/{tableId} {
        allow update: if canModify(tableId,'cg')
        match /{document=**} {allow read,write: if canModify(tableId,'cg')}
      }
    	function canModify(tableId,tableType) {
      	return hasAnyRole(get(/databases/$(database)/documents/_rowy_/settings)
        .data.tablesSettings[tableType][tableId].modifiableBy)
	   	}
    }
    // Rowy: Allow users to edit their settings
    match /_rowy_/userManagement/users/{userId} {
      allow get, update, delete: if isDocOwner(userId);
      allow create: if request.auth.token.roles.size() > 0;
    }
    // Rowy: Allow public to read public Rowy configuration
    match /_rowy_/publicSettings {
      allow get: if true;
    }

    // Rowy: Utility functions
    function isDocOwner(docId) {
      return request.auth != null && (request.auth.uid == resource.id || request.auth.uid == docId);
    }
    function hasAnyRole(roles) {
      return request.auth != null && request.auth.token.roles.hasAny(roles);
    }

    match /clients/{parent}/clientBillings/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/clientBillings/{document} {
      allow read: if request.auth != null;
    }


    match /clients/{parent}/clientCargoItems/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/clientCargoItems/{document} {
      allow read: if request.auth != null;
    }


    match /clients/{parent}/clientContacts/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/clientContacts/{document} {
      allow read: if request.auth != null;
    }


    match /clients/{parent}/clientDepts/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/clientDepts/{document} {
      allow read: if request.auth != null;
    }


    match /clients/{parent}/clientDocs/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/clientDocs/{document} {
      allow read: if request.auth != null;
    }


    match /clients/{parent}/clientReports/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/clientReports/{document} {
      allow read: if request.auth != null;
    }


    match /clients/{parent}/clientShipments/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /{path=**}/clientShipments/{document} {
      allow read: if request.auth != null;
    }


    match /{document=**} {
      allow read, write: if request.auth.token.email.matches("firebase@flutterflow.io");
    }

    match /billings/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /clients/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /companies/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /contacts/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /documents/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /departments/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /shipments/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /shipmentsList/{document} {
      allow create: if true;
      allow read: if true;
      allow write: if false;
      allow delete: if false;
    }

    match /users/{document} {
      allow create: if false;
      allow read: if request.auth != null;
      allow write: if false;
      allow delete: if false;
    }

    match /{document=**} {
      allow read, write: if
          request.time < timestamp.date(2024, 12, 31);
    }
  }
}